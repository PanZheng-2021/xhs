!function(){"use strict";class e{static IsValidDataField(e){return null!=e&&e.length>0&&"null"!==e}static isElementDisabled(t,a){return(a??e.GetFirstVisibleElement(t))?.disabled}static RunQuerySelectorAll(e){const t=e.split("<");let a=document.querySelectorAll(t[0]);for(const e of t.slice(1)){const t=a[0]?.shadowRoot;if(!t)return[];a=t.querySelectorAll(e)}return a}static IsElementVisible(e){return e&&e.offsetWidth>0&&e.offsetHeight>0}static CountVisibleElements(t){if(!e.IsValidDataField(t))return 0;const a=e.RunQuerySelectorAll(t);let l=0;for(const t of a)e.IsElementVisible(t)&&l++;return l}static GetFirstVisibleElement(t){if(!e.IsValidDataField(t))return;const a=t.split(";");for(const t of a)try{const a=e.RunQuerySelectorAll(t);for(const t of a)if(e.IsElementVisible(t))return t}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: GetFirstVisibleElement error",e)}}static Sleep(e){return new Promise((t=>setTimeout(t,e)))}static async WaitForCondition(t,a,l){const i=(new Date).getTime();for(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: waiting");!await t()&&i+a>(new Date).getTime();)await e.Sleep(l??100);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: wait completed."),await t()}static async IsFieldVisible(t){return e.CountVisibleElements(t)>0}}class t{static Click(t,a,l){const i=a??e.GetFirstVisibleElement(t);return!!i&&(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click element visible",i,i.innerText),e.isElementDisabled(void 0,i)||function(e){const t=["mousedown","click","mouseup"];if(l){let a=!1;t.forEach((t=>e.addEventListener(t,(()=>{a||(a=!0,l())}))))}t.forEach((t=>e.dispatchEvent(new MouseEvent(t,{bubbles:!0,buttons:1,cancelable:!0,view:window}))))}(i),!0)}static SetBoxValue(t,a){const l=document.createEvent("Events");l.initEvent("change",!0,!1);const i=document.createEvent("Events");i.initEvent("input",!0,!1);const o=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,view:window}),n=e.GetFirstVisibleElement(t);return n?(n.blur(),n.dispatchEvent(l),n.focus(),n.setAttribute("value",a),n.value=a,n.dispatchEvent(o),n.dispatchEvent(i),n.dispatchEvent(l),n.blur(),!0):(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: input box undefined"),!1)}}var a,l;function i(e,t,a){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: SendAutofillCompleteMessage",e,t,a),t?(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframe postMessage to parent",e,a),parent.postMessage({type:l.WalletCheckoutAutofillDriverCompleteMessage,payload:e},a)):window.WalletCheckoutScriptAutofillRuntime.postMessageToHost("AutofillComplete",e)}async function o(a){const{Name:l,Selector:i,Type:o,ValueList:n,WaitBefore:s,SecondarySelector:d}=a;"button"==o&&0==n?.length||await e.Sleep(s||0);const c=await e.IsFieldVisible(i);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSelectorVisible",l,c),!c)throw new Error("Selector not found");if("input"===o)t.SetBoxValue(i,n?.[0]);else if("button"===o)if(d){const a=await e.IsFieldVisible(d);window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,a),a||(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",i),t.Click(i))}else window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",i),t.Click(i)}function n(e,t){const a=new RegExp(`(?<![a-zA-Z0-9])${e}(?![a-zA-Z])`,"i");return t?.match(a)}function s(e,l,i){for(const o of e){const e=(o?.innerText||o?.innerHTML)?.toUpperCase()?.trim();let s=!1;if(s=i===a.ExactMatch?l.some((t=>t===e)):l.some((t=>n(t,e))),s)return t.Click(void 0,o),!0}return!1}function d(t,l,i){const o=e.RunQuerySelectorAll(l),n=i?.map((e=>e.toUpperCase()));let d=s(o,n,a.ExactMatch);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after ExactMatch, canMatch",t,d),d||(d=s(o,n,a.RegMatch),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after RegMatch, canRegMatch",t,d)),d}async function c(a){const{Name:l,ValueList:i,WaitForVisible:o,ArrowDownSelector:n,SecondarySelector:s,SecondaryType:c}=a;if(s){const a=await e.WaitForCondition((async()=>await e.IsFieldVisible(s)),o||0);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,a),!a)throw new Error("Secondary selector not found");if("option"===c){let a=!1;if(n)for(;!a&&!e.isElementDisabled(n);)window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click ArrowDownSelector",n),t.Click(n,void 0,(()=>{a=d(l,s,i)}));else a=d(l,s,i);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: canMatch final result",l,a),!a)throw new Error("Secondary selector of option cannot match ValueList")}else"button"===c&&t.Click(s)}}!function(e){e[e.ExactMatch=0]="ExactMatch",e[e.RegMatch=1]="RegMatch"}(a||(a={})),function(e){e.WalletCheckoutAutofillDriverCompleteMessage="WalletCheckoutAutofillDriverCompleteMessage"}(l||(l={})),window.WalletCheckoutScriptAutofillRuntime=new class{initialize(e){return window.loadTimeData={data_:{isDebugEnabled:!0}},window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: initialize, params: ",e),e.splice(0,2),window.ExecuteInitialize(e),!0}raiseMessageFromHost(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost",e);if("WalletCheckoutScriptAutofill"===e.shift())try{"interactive"===document.readyState||"complete"===document.readyState?window.ExecuteAutofill(e):window.addEventListener?.("DOMContentLoaded",(()=>{window.ExecuteAutofill(e)}))}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost error",e)}}postMessageToHost(e,t){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost",e,t);try{walletCheckoutAutofillNativeHandler&&walletCheckoutAutofillNativeHandler.sendMessageToHost(e,t)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}},window.ExecuteInitialize=async function(t){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteInitialize",t);const a=t?.[1],o=JSON.parse(a??"{}"),{IsDebugEnabled:n}=o;window.loadTimeData={data_:{isDebugEnabled:n}};const s=t?.[2],d=JSON.parse(s??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: primaryMainFrameData",d);const{ShouldListenToIframeMessage:c}=d;let r=!1;function u(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive message from iframe, event: ",e);const{type:t,payload:a}=e.data;if(t===l.WalletCheckoutAutofillDriverCompleteMessage){r=!0,window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive WalletCheckoutAutofillDriverComplete message from iframe, payload: ",a);try{i(a)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}}c&&(window.addEventListener("message",u),await e.WaitForCondition((async()=>r),1e4),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isIframeResponseReturned",r),window.removeEventListener("message",u))},window.ExecuteAutofill=async function(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill",e);const t=e?.[0],a=JSON.parse(t??"{}"),{CheckoutElements:l=[]}=a,n=e?.[3],s=JSON.parse(n??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframeData",s);const{IsIframeElement:d,ParentOrigin:r}=s;try{let e=!0;const t=[];for(const a of l){const{Name:l,Selector:i,SecondarySelector:n}=a;if(i)try{await o(a)}catch(a){e=!1,t.push({failedField:l,failureReason:a.message});continue}if(n)try{await c(a)}catch(a){e=!1,t.push({failedField:l,failureReason:a.message})}}i([JSON.stringify({isSuccess:e,failureDetails:t?.length>0?t:null})],d,r)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill error",e),i([JSON.stringify({isSuccess:!1,failureDetails:null})],d,r)}}}();